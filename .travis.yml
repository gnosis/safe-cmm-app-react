if: (branch = development) OR (branch = master) OR (type = pull_request) OR (tag IS present)
dist: xenial
language: node_js
node_js:
  - "14.4.0"
cache:
  yarn: true

matrix:
  include:
    - env:
      - APP_BUILD='PREPROD'
      - INFURA_API_KEY=${INFURA_API_KEY}
      if: (branch = master AND NOT type = pull_request) OR tag IS present
    - env:
      - APP_BUILD='DEV/STAGING'
      - INFURA_API_KEY=${INFURA_API_KEY}
before_install:
  - npm install
  # Needed to deploy pull request and releases
  - pip install awscli --upgrade --user
script:
  - if [[ $APP_BUILD = "PREPROD" ]]; then
      echo "Executing -> npm run build-prod";
      npm run build-prod;
    else
      echo "Executing -> npm run build";
      npm run build;
    fi;


after_success:
  # add storybook to build
  - if [[ $TRAVIS_TAG != "" || $TRAVIS_PULL_REQUEST != "false" || $TRAVIS_BRANCH = master || $TRAVIS_BRANCH = development ]]; then
      echo "Executing -> npm run release-storybook";
      npm run release-storybook;
    fi
  # Pull Request - Deploy it to a review environment
  # Travis doesn't do deploy step with pull requests builds
  - ./travis/deploy_pull_request.sh
  # IPFS - Deploy and pin to IPFS
  # Only tagged builds
  - if [[ -n "$TRAVIS_TAG" ]]; then
      ./travis/deploy_and_pin_ipfs.sh;
    fi
deploy:
  # Development environment
  - provider: s3
    bucket: $DEV_BUCKET_NAME
    access_key_id: $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    local_dir: dist
    region: $AWS_DEFAULT_REGION
    skip_cleanup: true
    on:
      branch: development


    # Staging environment
  - provider: s3
    bucket: $STAGING_BUCKET_NAME
    access_key_id: $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    local_dir: dist
    upload-dir: current
    region: $AWS_DEFAULT_REGION
    skip_cleanup: true
    on:
      branch: master
      condition: $APP_BUILD != PREPROD

  # preprod environment
  - provider: s3
    bucket: $PREPROD_BUCKET_NAME
    access_key_id: $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    local_dir: dist
    upload-dir: current
    region: $AWS_DEFAULT_REGION
    skip_cleanup: true
    on:
      branch: master
      condition: $APP_BUILD = PREPROD


    # Prepare production deployment
  - provider: s3
    bucket: $PREPROD_BUCKET_NAME
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    access_key_id: $AWS_ACCESS_KEY_ID
    local_dir: dist
    upload-dir: releases/$TRAVIS_TAG
    region: $AWS_DEFAULT_REGION
    skip_cleanup: true
    on:
      tags: true
      condition: $APP_BUILD = PREPROD
  - provider: script
    script: ./travis/prepare_production_deployment.sh
    on:
      tags: true
      condition: $APP_BUILD = PREPROD
